<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ai.gzesp.dao.MyAcctDao">

	<select id="queryAcctByUserId" resultType="java.util.HashMap">
	select a.USER_ID,
	       ACCT_ID,
	       trunc(BALANCE/1000,2) as BALANCE,
	       ACCT_TYPE,
	       ACCT_STATUS,
	       b.PASSWORD,
	       UPDATE_TIME
	  from ACT_D_ACCOUNT a, ACT_D_PAY_PASSWORD b 
	 where a.ACCT_TYPE = '2' 
	   and a.user_id = b.user_id(+)
	   and a.user_id = #{user_id}
	</select>	
	<select id="queryAcctBankByUserId" resultType="java.util.HashMap">
	select a.*, b.param_value
	  from ACT_D_BANKCARD a, SYS_D_ESPPARAM b
	 where b.param_type = 'BANK_TYPE'
	   and b.param_code = a.bank_type
	   and a.valid_flag='1'
	   and a.user_id = #{user_id}
	</select>
	<insert id="insertAcctPwd">
		insert into ACT_D_PAY_PASSWORD
			(user_id,password,update_time)
		values(#{user_id},#{user_pwd},sysdate)
	</insert>
	<update id="updateAcctPwd">
		update ACT_D_PAY_PASSWORD set password=#{user_pwd},update_time=sysdate where user_id=#{user_id}
	</update>
	
	<select id="queryAcctByUserId_UserPwd" resultType="java.util.HashMap">
	select *
	  from ACT_D_PAY_PASSWORD
	 where user_id = #{user_id}
	   and password = #{user_pwd}
	</select>
	<insert id="insertAcctBank">
		insert into ACT_D_BANKCARD
		  (user_id, bank_no,cvn2,phone,name,certificate_code,expire_date,card_type,bank_type,sign_code,priority,valid_flag,sys_trade_no,
		   bank_branch, province_code, String eparchy_code, String city_code)
		values
		  (
		   #{user_id},
		   #{bank_no},
		   #{cvn2},
		   #{phone},
		   #{name},
		   #{certificate_code},
		   #{expire_date},
		   #{card_type},
		   #{bank_type},
		   #{sign_code},
		   #{priority},
		   #{valid_flag},
		   #{sys_trade_no},
		   #{bank_branch},
		   #{province_code},
		   #{eparchy_code},
		   #{city_code})
	</insert>
	<update id="updateAcctBank">
		update ACT_D_BANKCARD 
		   set <if test="cvn2 != null and cvn2 != ''">
		         cvn2=#{cvn2},
	           </if>
		       <if test="expire_date != null and expire_date != ''">
		         expire_date=#{expire_date},
	           </if>
		         phone=#{phone},
		         name=#{name},
		         certificate_code=#{certificate_code},
		         card_type=#{card_type},
		         bank_type=#{bank_type},
	           <if test="sign_code != null and sign_code != ''">
		         sign_code=#{sign_code},
	           </if>
	           <if test="priority != null and priority != ''">
		         priority=#{priority},
	           </if>
	           <if test="valid_flag != null and valid_flag != ''">
		         valid_flag=#{valid_flag},
	           </if>
	           <if test="sys_trade_no != null and sys_trade_no != ''">
		         sys_trade_no=#{sys_trade_no},
	           </if>
		         bank_branch=#{bank_branch},
		         province_code=#{province_code},
		         eparchy_code=#{eparchy_code},
		         city_code=#{city_code}
		 where user_id=#{user_id} 
		   and bank_no=#{bank_no}
	</update>
	
	<update id="updateAcctBankState">
		update ACT_D_BANKCARD 
		   set valid_flag=#{valid_flag}
		 where user_id=#{user_id} 
		   and bank_no=#{bank_no}
	</update>	
	
	<select id="queryAcctBankDetail" resultType="java.util.HashMap">
		select a.*, b.param_value
		  from ACT_D_BANKCARD a, SYS_D_ESPPARAM b
		 where b.param_type = 'BANK_TYPE'
		   and b.param_code = a.bank_type
		   and a.user_id = #{user_id}
		   and a.bank_no = #{bank_no}
	</select>
	
	<select id="queryAcctBalanceLog" resultType="java.util.HashMap">
		with T1 as
		 (select a.User_Id, b.*
		    from ACT_D_ACCOUNT a, ACT_D_ACCESS_LOG b
		   where a.acct_id = b.acct_id
		     and a.acct_status = '1'
		     and a.acct_type = '2'
		       and a.user_id=#{user_id}
		       <if test="iFlag == 0">
		       	and  TRADE_TYPE in('10','51')
		       </if>
		       <if test="iFlag == 1">
		       	and  TRADE_TYPE in('22','52')
		       </if>
		       <if test="iFlag == 2">
		       	and  TRADE_TYPE = '60'
		       </if>
	           <if test="update_time != ''">
	               <![CDATA[ 
	                 and b.update_time>=trunc(to_date(#{update_time},'yyyy-mm'), 'MM')
	                 and b.update_time<trunc(add_months(to_date(#{update_time},'yyyy-mm'),1),'MM')
	                  ]]>
	           </if>
		   order by b.update_time desc),
		T2 as
		 (select a.*
		    from ACT_D_WITHDRAW_AUDIT a
		   where a.user_id = #{user_id})
		select T1.user_id,
	       T1.order_id,
	       case when T1.trade_type ='10' then
	             '佣金转入'
	            when T1.trade_type ='51' then
	              '佣金回退'
	            when T1.trade_type ='22' then
	              '代客下单'
	            when T1.trade_type ='52' then
	              '支付回退'
	            when T1.trade_type ='60' then
	              '提现'
	            else
	              '未知'                           
	       end trade_type,
	       trunc(T1.old_balance/1000,2) as old_balance,  
 	       trunc(T1.new_balance/1000,2) as new_balance,
	       trunc(T1.fee/1000,2) as fee,
	       T1.update_time,
	       trunc(T2.withdraw_fee/1000,2) as withdraw,
	       case when T2.audit_state ='01' then
	         '审核中'
	         else
	           '未知'
	       end audit_state,
	       T2.apply_time,
	       case 
	         when T1.cancel_tag ='0' then
	           ''
	         when T1.cancel_tag='1' then
	            '返销'
	          else
	            '未知'
	         end cancel_tag,
          	case 
	           when T2.operate_tag='1' then
	             '打款成功'
	           when T2.operate_tag='2' then
	             '打款失败'
	           else
	             '未打款'
	         end operate_tag
	  from T1, T2
	 where T1.user_id = T2.user_id(+)
	 order by T1.update_time desc

	</select>
	
	<select id="queryAcctBalanceLogPage" resultType="java.util.HashMap">
		with T1 as
		 (select a.User_Id, b.*
		    from ACT_D_ACCOUNT a, ACT_D_ACCESS_LOG b
		   where a.acct_id = b.acct_id
		     and a.acct_status = '1'
		     and a.acct_type = '2'
		       and a.user_id=#{user_id}
		       <if test="iFlag == 0">
		       	and  TRADE_TYPE in ('10','51')
		       </if>
		       <if test="iFlag == 1">
		       	and  TRADE_TYPE in('22','52')
		       </if>
		       <if test="iFlag == 2">
		       	and  TRADE_TYPE = '60'
		       </if>
	           <if test="update_time != ''">
	               <![CDATA[ 
	                 and b.update_time>=trunc(to_date(#{update_time},'yyyy-mm'), 'MM')
	                 and b.update_time<trunc(add_months(to_date(#{update_time},'yyyy-mm'),1),'MM')
	                  ]]>
	           </if>
		   order by b.update_time desc),
		T2 as
		 (select a.*
		    from ACT_D_WITHDRAW_AUDIT a
		   where a.user_id = #{user_id})
		select *
		  from (select tt.*, ROWNUM as rowno
		          from (select T1.user_id,
		                       T1.order_id,
		                       case when T1.trade_type ='10' then
		                             '佣金转入'
		                            when T1.trade_type ='51' then
		                              '佣金回退'
		                            when T1.trade_type ='22' then
		                              '代客下单'
		                            when T1.trade_type ='52' then
		                              '支付回退'
		                            when T1.trade_type ='60' then
		                              '提现'
		                            else
		                              '未知'                           
		                       end trade_type,
						       trunc(T1.old_balance/1000,2) as old_balance,  
					 	       trunc(T1.new_balance/1000,2) as new_balance,
						       trunc(T1.fee/1000,2) as fee,
						       T1.update_time,
						       trunc(T2.withdraw_fee/1000,2) as withdraw,
		                       case when T2.audit_state ='01' then
		                         '审核中'
		                         else
		                           '未知'
		                       end audit_state,
		                       T2.apply_time,
		                       case 
		                         when T1.cancel_tag ='0' then
		                           ''
		                         when T1.cancel_tag='1' then
		                            '返销'
		                          else
		                            '未知'
		                         end cancel_tag,
					           case 
						           when T2.operate_tag='1' then
						             '打款成功'
						           when T2.operate_tag='2' then
						             '打款失败'
						           else
						             '未打款'
						         end operate_tag
		                  from T1, T2
		                 where T1.user_id = T2.user_id(+)
		                 order by T1.update_time desc
		                 ) tt

		  <![CDATA[  
			  where Rownum <= (${page_num}*${page_size})) table_alias
			  where table_alias.rowno >= (${page_num}-1)*${page_size}+1
		 	]]>

	</select>
	
	<insert id="insertAccount">
		insert into ACT_D_ACCOUNT
		  (user_id, acct_id, balance, acct_type, acct_status, version)
		values
		  (#{user_id},
		   #{acct_id},
		   ${balance},
		   #{acct_type},
		   #{acct_status},
		   #{version})
	</insert>
	<select id="queryToPayMoneyByOrderId" resultType="java.util.HashMap">
		select to_char(topay_money) as topay_money from ord_d_base where order_id=#{order_id}
	</select>
	<select id="queryToPayMoneyCardByOrderId" resultType="java.util.HashMap">
		select to_char(topay_money) as topay_money from ord_d_card_pay where order_id=#{order_id}
	</select>
	<insert id="insertWidthDrawAuDit">
		insert into ACT_D_WITHDRAW_AUDIT
		  (log_id, partition_id, apply_time, user_id, withdraw_fee, audit_state,bank_no,bank_type)
		values
		  (#{log_id},
		   #{partition_id},
		   to_date(#{apply_time},'yyyy/MM/dd  HH24:mi:SS'),
		   #{user_id},
		   ${dwithdraw_fee},
		   #{audit_state},
		   #{bank_no},
		   #{bank_type}
		   )
	</insert>
	
	<select id="getProvinceList" resultType="java.util.HashMap">
     select ess_province_code province_code, province_name 
       from sys_p_web_province 
      <if test="province_code != null">
		 where ess_province_code = #{province_code}
	  </if>
       order by order_number
	</select>
	
	<select id="geteEparchyList" resultType="java.util.HashMap">
     select ess_city_code eparchy_code, city_name eparchy_name 
       from sys_p_web_city
      <if test="province_code != null">
		 where ess_province_code = #{province_code}
	  </if>
      order by order_number
	</select>
	
	<select id="geteCityList" resultType="java.util.HashMap">
     select district_code city_code, district_name city_name
       from sys_p_web_district
      <if test="eparchy_code != null">
		 where ess_city_code = #{eparchy_code}
	  </if>  
      order by order_number
	</select>		
		
	<update id="saveBankCardInfo" parameterType="map" >
		update ACT_D_BANKCARD 
		   set <if test="cvn2 != null and cvn2 != ''">
		         cvn2=#{cvn2},
	           </if>
		       <if test="expire_date != null and expire_date != ''">
		         expire_date=#{expire_date},
	           </if>
		         phone=#{phone},
		         name=#{name},
		         certificate_code=#{certificate_code},
		         card_type=#{card_type},
		         bank_type=#{bank_type},
	           <if test="sign_code != null and sign_code != ''">
		         sign_code=#{sign_code},
	           </if>
	           <if test="priority != null and priority != ''">
		         priority=#{priority},
	           </if>
	           <if test="valid_flag != null and valid_flag != ''">
		         valid_flag=#{valid_flag},
	           </if>
	           <if test="sys_trade_no != null and sys_trade_no != ''">
		         sys_trade_no=#{sys_trade_no},
	           </if>
		         bank_branch=#{bank_branch},
		         province_code=#{province_code},
		         eparchy_code=#{eparchy_code},
		         city_code=#{city_code}
		 where user_id=#{user_id} 
		   and bank_no=#{bank_no_hex}
	</update>
			
</mapper>