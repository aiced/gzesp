<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ai.gzesp.dao.OrderDao">

	
	<select id="queryNumberListByPage" resultType="java.util.HashMap">
	  select *
	    from (	
      select m.*, rownum row_num
        from (	
        select a.serial_number, 
               nvl(a.nice_fee,0)/1000 nice_fee
          from NUM_D_NUMINFO a
         where a.code_state = '1'
           and a.province_code = '85'
          <choose>
		    <when test="net_type_code != null">
			  and a.net_type_code like '%'||#{net_type_code}||'%'
			</when>  
		    <otherwise>
			  and a.net_type_code != '04'
		    </otherwise>
	      </choose>           
            <if test="keyword != null">
               and a.serial_number like '%'||#{keyword}||'%'
            </if>
		    <if test="eparchy_code != null">
			  and a.eparchy_code like '%'||#{eparchy_code}||'%'
			</if>              
            <if test="nice_rule != null">
               and a.nice_rule = #{nice_rule}
            </if>
            <if test="nice_fee_start != null">
               <![CDATA[ 
                 and (a.nice_fee is null or a.nice_fee >= #{nice_fee_start}*1000)
                  ]]>
            </if>
            <if test="nice_fee_end != null">
               <![CDATA[ 
               and (a.nice_fee is null or a.nice_fee <= #{nice_fee_end}*1000)
               ]]>
            </if>
          order by 
          <choose>
		    <when test="sortCol != null">
			  ${sortCol}
			</when>  
		    <otherwise>
			  a.serial_number 
		    </otherwise>
	      </choose>          
          <choose>
		    <when test="sort != null">
			  ${sort}
			</when>  
		    <otherwise>
			  desc
		    </otherwise>
	      </choose>
          ) m
         )
	<![CDATA[
        where row_num > (${pageNum}-1)*${pageSize}
          and row_num <= ${pageNum}*${pageSize}       
     ]]>
	</select>	
	
	<select id="getNumberRules" resultType="java.util.HashMap">
     select distinct nice_rule nice_rule
       from NUM_D_NICERULE_LIMIT 
	</select>	
	
	<update id="updateNumberState" >
	   update num_d_numinfo a
          set a.code_state = '2'
        where serial_number = #{serial_number}
          and a.code_state = '1'
	</update>
	
	<insert id="insertNumberReserve">
       insert into NUM_D_RESERVE
              (serial_number, code_state, add_time)
       values(#{serial_number}, #{code_state}, sysdate)	
	</insert>
	
	<update id="updateGoodsAmount" >
      update gds_d_amount
         set goods_amount = 
            (case when amount_type='1' then goods_amount-1 
                  when amount_type='2' then goods_amount+1 
                  else 0 end)
        where goods_id = ${goods_id}
	</update>
	
	<update id="updateGoodsAmountReverse" >
      update gds_d_amount
         set goods_amount = 
            (case when amount_type='1' then goods_amount+1 
                  when amount_type='2' then goods_amount-1 
                  else 0 end)
        where goods_id in
              <foreach collection="goodIds" item="goods_id" index="index"
                  open="(" close=")" separator=",">
                   ${goods_id}
              </foreach>
	</update>			
	
	<select id="getNetTypeByGoodsId" resultType="java.util.HashMap">
     select a.goods_id ,
            b.res_id,
            c.attr_code,
            c.attr_val_name,
            c.attr_val_code,
            c.values1
       from GDS_D_INFO a ,
            REL_GOODS_RES b,
            RES_D_ATTRVAL c
      where a.goods_id = ${goods_id}
        and a.goods_id = b.goods_id
        and b.res_id = c.res_id
        and c.attr_code = 'NETTYPE'
	</select>	
	
	<select id="queryNumbersTimeout" resultType="java.util.HashMap">
      <![CDATA[
     select serial_number, code_state
       from NUM_D_RESERVE
      where add_time <= sysdate - 1/(24*2)
        and code_state = '2'
         ]]>    
	</select>	
	
	<select id="queryOrdersTimeout" resultType="java.util.HashMap">
      <![CDATA[
      select to_char(a.order_id) order_id,
             to_char(c.goods_id) goods_id
        from ord_d_base a,
             ord_d_paylog b,
             ord_d_prod c
       where a.order_id = b.order_id(+)
         and a.create_time <= sysdate - 1/(24*2)
         and b.pay_id is null 
         and a.order_id = c.order_id
         ]]>    
	</select>
	
	<select id="queryOrdersTimeout2" resultType="java.util.HashMap">
      <![CDATA[
        select to_char(a.order_id) order_id,
             to_char(c.goods_id) goods_id
        from ord_d_base a,
             ord_d_pay b,
             ord_d_prod c
       where a.order_id = b.order_id(+)
         and a.create_time <= sysdate - 1/(24*2)
         and a.create_time >= to_date('20150603120000','yyyymmddhh24miss')
         and (b.order_id is null or b.pay_state <> '1')
         and a.order_state <> '99'
         and a.order_id = c.order_id
         ]]>    
	</select>			
	
	<update id="releaseNumberState" >
	   update num_d_numinfo a
          set a.code_state = '1'
        where serial_number in
              <foreach collection="numbers" item="serial_number" index="index"
                  open="(" close=")" separator=",">
                   #{serial_number}
              </foreach>
	</update>	
	
	<delete id="deleteNumberReserve">
	   delete from NUM_D_RESERVE
        where serial_number in
              <foreach collection="numbers" item="serial_number" index="index"
                  open="(" close=")" separator=",">
                   #{serial_number}
              </foreach>
	</delete>	
	
	<select id="getNumberByOrderId" resultType="java.util.HashMap">
      select RES_ATTR_VAL serial_number
        from ORD_D_RES
       where order_id = ${order_id}
         and RES_ATTR_CODE = 'NUMBERS'
	</select>	
	
	<delete id="deleteOrderBaseInfo">
	   delete from ORD_D_BASE
        where order_id in
              <foreach collection="orderIds" item="order_id" index="index"
                  open="(" close=")" separator=",">
                   #{order_id}
              </foreach>
	</delete>
	
	<delete id="deleteOrderCustInfo">
	   delete from ORD_D_CUST
        where order_id in
              <foreach collection="orderIds" item="order_id" index="index"
                  open="(" close=")" separator=",">
                   #{order_id}
              </foreach>
	</delete>	
	
	<delete id="deleteOrderDealInfo">
	   delete from ORD_D_DEAL
        where order_id in
              <foreach collection="orderIds" item="order_id" index="index"
                  open="(" close=")" separator=",">
                   #{order_id}
              </foreach>
	</delete>	
	
	<delete id="deleteOrderPostInfo">
	   delete from ORD_D_POST
        where order_id in
              <foreach collection="orderIds" item="order_id" index="index"
                  open="(" close=")" separator=",">
                   #{order_id}
              </foreach>
	</delete>
	
	<delete id="deleteOrderResInfo">
	   delete from ORD_D_RES
        where order_id in
              <foreach collection="orderIds" item="order_id" index="index"
                  open="(" close=")" separator=",">
                   #{order_id}
              </foreach>
	</delete>
	
	<delete id="deleteOrderCMSPreFee">
	   delete from ORD_D_PRECMSFEE
        where order_id in
              <foreach collection="orderIds" item="order_id" index="index"
                  open="(" close=")" separator=",">
                   #{order_id}
              </foreach>
	</delete>
	
	<delete id="deleteOrderProdInfo">
	   delete from ORD_D_PROD
        where order_id in
              <foreach collection="orderIds" item="order_id" index="index"
                  open="(" close=")" separator=",">
                   #{order_id}
              </foreach>
	</delete>
	
	<delete id="deleteOrderCMSStateInfo">
	   delete from ORD_D_CMSSTATE
        where order_id in
              <foreach collection="orderIds" item="order_id" index="index"
                  open="(" close=")" separator=",">
                   #{order_id}
              </foreach>
	</delete>	
	
	<delete id="deleteOrderPreCMSFeeInfo">
	   delete from ORD_D_PRECMSFEE
        where order_id in
              <foreach collection="orderIds" item="order_id" index="index"
                  open="(" close=")" separator=",">
                   #{order_id}
              </foreach>
	</delete>
	
	<update id="updateOrderBaseState" >
	   update ord_d_base a
          set a.order_state = '99'
        where order_id in
              <foreach collection="orderIds" item="order_id" index="index"
                  open="(" close=")" separator=",">
                   #{order_id}
              </foreach>
	</update>													
	
</mapper>