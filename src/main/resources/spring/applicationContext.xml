<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:cache="http://www.springframework.org/schema/cache" 
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xsi:schemaLocation=" 
	  http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd          
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd          
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd          
      http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd          
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd          
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
      http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd">

	<!-- 扫描指定package下所有带有如@controller,@services,@resource,并把所注释的注册为Spring Beans,其他路径可以加,号分隔 -->
	<context:component-scan base-package="com.ai.sysframe,com.ai.osapp.security,com.ai.osapp.dao.service,com.ai.osapp.remote">	
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <context:component-scan base-package="com.ai.osapp.aop">	
        <context:include-filter type="annotation" expression="org.aspectj.lang.annotation.Aspect"/>
    </context:component-scan>
    
    <context:component-scan base-package="com.ai.osapp.security">	
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <bean class="com.ai.sysframe.exception.MyHandlerExceptionResolver"/>
     
	<!-- 激活annotation功能 -->
	<context:annotation-config />
	<!-- 激活annotation功能 -->
	<context:spring-configured />
	<!-- 缓存注解驱动 -->
<!-- 	<cache:annotation-driven cache-manager="ehCacheManager" /> -->
	<!-- 启动aop切面编程注解 -->
	<aop:aspectj-autoproxy />


    <!-- 属性文件读入 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				  <value>classpath:spring/jdbc_mysql.properties</value>
			</list>
		</property>
        <property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>

	<!-- 数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- Connection Pooling Info -->
		<property name="initialSize" value="60" />
		<property name="maxActive" value="600" />
		<property name="maxIdle" value="50" />
		<property name="minIdle" value="20" />
		<property name="maxWait" value="3000" />
		<property name="poolPreparedStatements" value="false" />
		<property name="defaultAutoCommit" value="false" />
				<!-- test conn while idle -->
		<property name= "testWhileIdle" value="true" />  
        <property name= "testOnBorrow" value="false" />  
        <property name= "testOnReturn" value="false" />  
        <property name= "validationQuery" value="select 1 from dual" />  
        <property name= "timeBetweenEvictionRunsMillis" value="30000" />  
        <property name= "numTestsPerEvictionRun" value="30" />
        <property name="minEvictableIdleTimeMillis" value="1800000" />  
	</bean>
	
    <!-- Mybatis's sqlSessionFactory config -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<!-- <property name="mapperLocations" value="classpath*:mybatis/mapper/*.xml" /> -->
	</bean>
	
	<bean id = "jdbcTemplate"   class = "org.springframework.jdbc.core.JdbcTemplate">    
         <property name = "dataSource" ref="dataSource"/>    
    </bean> 
	
	<!-- enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 启用事务 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="select*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="list*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="insert*" read-only="false" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" read-only="false" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="delete*" read-only="false" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="save*" read-only="false" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="*" timeout="10" />
		</tx:attributes>
	</tx:advice>
 
	<!-- 需要事务拦截的路径 -->
    <aop:config>
        <aop:pointcut id="serviceOperation" expression="execution(* com.ai.osapp.dao.service.*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />
       <!-- 
        <aop:aspect ref="exceptionHandler" >
        	<aop:before method="logAction" pointcut-ref="serviceOperation" />
        	<aop:after-throwing method="logException" pointcut-ref="serviceOperation" />
        </aop:aspect>
         -->
        
        
    </aop:config>

    <!-- scan mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ai.osapp.dao.persistence" />
    </bean>

	<!-- 声明ehCacheManager -->
<!-- 	<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cache-manager-ref="ehcache" /> -->

	<!-- ehCacheManager工厂类 -->
<!-- 	<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:config-location="classpath:ehcache.xml" /> -->

    <!-- 配置 JSR303 Bean Validator 定义 -->
    <!-- <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" /> -->

	<bean id="limitInterceptor" class="com.ai.osapp.security.MappSecurityInterceptor">
		<!-- 
		 <property name="whiteListIP">  
            <list>
                <value>127.0.0.1</value>  
                <value>localhost</value>  
            </list>  
        </property>
        
		 <property name="blackListIP">  
            <list>  
                <value>192.168.0.10</value>  
                <value>192.168.0.11</value>  
            </list>  
        </property>  
         
		<property name="openingTime" value="9" />
		<property name="closingTime" value="12" />
		<property name="mappingURL" value=".*/query.*" />
		-->
	</bean>   

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<ref bean="limitInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<bean id="pojoMapListMarshaller " name="pojoMapListMarshaller" class="com.ai.sysframe.xml.xstream.converters.PojoMapListMarshaller">
		<property name="converters">
			<list>
				<bean class="com.ai.sysframe.xml.xstream.converters.PojoMapConverter" />
			</list>
		</property>
	</bean>
	
	<bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 设置上传文件的最大尺寸为1024*1024*20MB -->  
	    <property name="maxUploadSize">  
	        <value>20971520</value>  
	    </property>
	    <property name="resolveLazily" value="true"/>  
    </bean>
     
</beans>

